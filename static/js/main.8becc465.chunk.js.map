{"version":3,"sources":["Hero.js","SearchHero.js","App.js","reportWebVitals.js","index.js"],"names":["Stat","Row","xs","md","lg","className","Col","this","props","statName","ProgressBar","now","statValue","Component","HeroTeam","sortStats","statList","state","sorted_stats","stat","push","sort","a","b","reverse","componentDidUpdate","console","log","componentWillUnmount","nextProps","setState","Card","Body","Title","Text","map","Hero","getInfo","heroId","axios","get","then","response","updateData","data","jsoninfo","id","alignment","biography","name","image","url","intelligence","powerstats","strength","speed","durability","power","combat","fullname","alias","aliases","workplace","work","base","height","appearance","weight","eyecolor","haircolor","count","parentCallback","showDetails","String","Math","floor","random","renderDetails","valueList","item","index","showCard","Container","fluid","Img","variant","src","showInfo","Accordion","Toggle","as","Button","eventKey","onClick","heroGrid","Collapse","SearchHero","processList","jsonList","listResult","undefined","heroItem","heroList","handleCallback","statsData","operation","replace","handleShowFlag","heroNumber","heroName","updateFlag","initialValues","validationSchema","LoginSchema","onSubmit","values","setSubmitting","timeOut","setTimeout","clearTimeout","results","catch","error","touched","errors","isSubmitting","handleChange","htmlFor","type","placeholder","onChange","component","disabled","Yup","shape","min","required","App","Number","stateName","goodHero1","goodHero2","goodHero3","evilHero1","evilHero2","evilHero3","showGoodHero1","showGoodHero2","showGoodHero3","showEvilHero1","showEvilHero2","showEvilHero3","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8becc465.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\n\r\nimport './Hero.css';\r\nimport {Container, Row, Col, Card, Button, ProgressBar, Accordion} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nclass Stat extends Component{\r\n\t// constructor(props){\r\n\t// \tsuper(props);\r\n\t// }\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Row xs md lg className=\"align-items-center mt-1\">\r\n\t\t\t\t<Col xs={5} md={6} lg={5}>\r\n\t\t\t\t\t{this.props.statName}\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<ProgressBar now={this.props.statValue} />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass HeroTeam extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tstatList: this.props.statList\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tconsole.log(\"Prop updated\")\r\n\t\tthis.setState({\r\n\t\t\tstatList: nextProps.statList,\r\n\t\t}); \r\n\t}\r\n\r\n\tsortStats = () => {\r\n\t\tvar statList = {\r\n\t\t\t\"Intelligence\": this.state.statList[0],\r\n\t\t\t\"Strength\": this.state.statList[1],\r\n\t\t\t\"Speed\": this.state.statList[2],\r\n\t\t\t\"Durability\": this.state.statList[3],\r\n\t\t\t\"Power\": this.state.statList[4],\r\n\t\t\t\"Combat\": this.state.statList[5]\r\n\t\t};\r\n\t\tvar sorted_stats = [];\r\n\t\tfor (var stat in statList) {\r\n\t\t\tsorted_stats.push([stat, statList[stat]]);\r\n\t\t}\r\n\t\tsorted_stats.sort((a, b) => {\r\n\t\t\treturn a[1] - b[1];\r\n\t\t})\r\n\t\t\r\n\t\tsorted_stats = sorted_stats.reverse();\r\n\t\treturn [sorted_stats[0]]\r\n\t}\r\n\t// Fill initial cards\r\n\tcomponentDidMount(props, state){\r\n\t\tconsole.log(\"Team did Mount\")\r\n\t\tthis.setState({statList: this.props.statList})\r\n\r\n\t}\r\n\tcomponentDidUpdate = () => {\r\n\t\tconsole.log(\"Team Updated\")\r\n\t}\r\n\tcomponentWillUnmount = () => {\r\n\t\tconsole.log(\"Team card removed\")\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Card className=\"bg-dark text-white\">\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>\r\n\t\t\t\t\t\tHero Name\r\n\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.sortStats().map((stat) => (\r\n\t\t\t\t\t\t\t<Row xs md lg className=\"align-items-center mt-1\">\r\n\t\t\t\t\t\t\t\t<Col xs={5} md={6} lg={5}>\r\n\t\t\t\t\t\t\t\t{stat[0]}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t{stat[1]}\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<Row xs md lg className=\"align-items-center mt-1\">\r\n\t\t\t\t\t\t\t<Col xs={5} md={6} lg={5}>\r\n\t\t\t\t\t\t\t\tHeight\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t{this.state.statList[6]/this.state.statList[8]}\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row xs md lg className=\"align-items-center mt-1\">\r\n\t\t\t\t\t\t\t<Col xs={5} md={6} lg={5}>\r\n\t\t\t\t\t\t\t\tWeight\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t{this.state.statList[7]/this.state.statList[8]}\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t)\r\n\t}\r\n}\r\nclass Hero extends Component{\r\n\tconstructor(props){\r\n\t\t// Only called the first time that is rendered, following props are not read\r\n\t\tconsole.log(\"Card created\")\t \r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\tshowCard: true,\r\n\t\t\tshowDetails: false,\r\n\t\t\t// Learn how to make an object of object state and reference the 2nd level\r\n\t\t\tid : this.props.heroId,\r\n\t\t\talignment : \"\",\r\n\t\t\tname : \"\",\r\n\t\t\timage : \"\",\r\n\t\t\tintelligence : \"\",\r\n\t\t\tstrength : \"\",\r\n\t\t\tspeed : \"\",\r\n\t\t\tdurability : \"\",\r\n\t\t\tpower : \"\",\r\n\t\t\tcombat : \"\",\r\n\t\t\tfullname : \"\",\r\n\t\t\talias : \"\",\r\n\t\t\tworkplace : \"\",\r\n\t\t\theight : \"\",\r\n\t\t\tweight : \"\",\r\n\t\t\teyecolor : \"\",\r\n\t\t\thaircolor : \"\",\t\r\n\t\t\tcount: \"1\"\r\n\t\t};\r\n\t\tthis.statList =[0,0,0,0,0,0,0,0,0]\r\n\t}\r\n\t// Update props for future cards. Deprecated?\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tthis.setState({\r\n\t\t\tshowCard: nextProps.showCard,\r\n\t\t}); \r\n\t\tthis.getInfo(nextProps.heroId);\r\n\t}\r\n\t// Fill initial cards\r\n\tcomponentDidMount(props, state){\r\n\t\tconsole.log(\"Hero did Mount\")\r\n\t\tthis.getInfo(this.state.id);\r\n\t}\r\n\tcomponentDidUpdate = () => {\r\n\t\tconsole.log(\"Hero Updated\")\r\n\t}\r\n\tcomponentWillUnmount = () => {\r\n\t\tconsole.log(\"Hero card removed\")\r\n\t}\r\n\t// axios get on App returns undefined, learn async\r\n\tgetInfo = (heroId) => {\r\n\t\taxios.get(\"https://superheroapi.com/api.php/10226669230223430/\" + heroId)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tthis.updateData(response.data)\r\n\t\t\t});\r\n\t}\r\n\r\n\tupdateData = (jsoninfo) => {\r\n\t\tthis.setState(() => ({\r\n\t\t\t// Hero Data\r\n\t\t\tid: jsoninfo.id,\r\n\t\t\talignment: jsoninfo.biography.alignment,\r\n\t\t\t// Hero Card Info\r\n\t\t\tname: jsoninfo.name,\r\n\t\t\timage: jsoninfo.image.url,\r\n\t\t\tintelligence: jsoninfo.powerstats.intelligence,\r\n\t\t\tstrength: jsoninfo.powerstats.strength,\r\n\t\t\tspeed: jsoninfo.powerstats.speed,\r\n\t\t\tdurability: jsoninfo.powerstats.durability,\r\n\t\t\tpower: jsoninfo.powerstats.power,\r\n\t\t\tcombat: jsoninfo.powerstats.combat,\r\n\t\t\t// Hero Details Info\r\n\t\t\tfullname: jsoninfo.biography[0],\r\n\t\t\talias: jsoninfo.biography.aliases[0],\r\n\t\t\tworkplace: jsoninfo.work.base,\r\n\t\t\theight: jsoninfo.appearance.height[1],\r\n\t\t\tweight: jsoninfo.appearance.weight[1],\r\n\t\t\teyecolor: jsoninfo.appearance[4],\t\t// How do I reference eye-color\r\n\t\t\thaircolor: jsoninfo.appearance[5],\r\n\t\t\tcount: \"1\"\r\n\t\t\t})\r\n\t\t)\r\n\t\tthis.statList = [\r\n\t\t\tthis.state.intelligence,\r\n\t\t\tthis.state.strength,\r\n\t\t\tthis.state.speed,\r\n\t\t\tthis.state.durability,\r\n\t\t\tthis.state.power,\r\n\t\t\tthis.state.combat,\r\n\t\t\tthis.state.weight,\r\n\t\t\tthis.state.height,\r\n\t\t\tthis.state.count\r\n\t\t];\r\n\t\t// pass info to render team stat list\r\n\t\tthis.props.parentCallback(this.statList, true)\r\n\t}\r\n\r\n\tsortStats = () => {\r\n\t\tvar statList = {\r\n\t\t\t\"Intelligence\": this.state.intelligence,\r\n\t\t\t\"Strength\": this.state.strength,\r\n\t\t\t\"Speed\": this.state.speed,\r\n\t\t\t\"Durability\": this.state.durability,\r\n\t\t\t\"Power\": this.state.power,\r\n\t\t\t\"Combat\": this.state.combat\r\n\t\t};\r\n\t\tvar sorted_stats = [];\r\n\t\tfor (var stat in statList) {\r\n\t\t\tsorted_stats.push([stat, statList[stat]]);\r\n\t\t}\r\n\t\tsorted_stats.sort((a, b) => {\r\n\t\t\treturn a[1] - b[1];\r\n\t\t})\r\n\t\t\r\n\t\tsorted_stats = sorted_stats.reverse();\r\n\t\treturn sorted_stats\r\n\t}\r\n\r\n\tshowDetails = () => {\r\n\t\tthis.getInfo(String(Math.floor(Math.random() * 731) + 1));\r\n\t}\r\n\trenderDetails = () => {\r\n\t\tlet labelList = [\"Weight\", \r\n\t\t\t\t\t\t\"Height\", \r\n\t\t\t\t\t\t\"Name\", \r\n\t\t\t\t\t\t\"Alias\", \r\n\t\t\t\t\t\t\"Eyes color\", \r\n\t\t\t\t\t\t\"Hair color\", \r\n\t\t\t\t\t\t\"Base\"]\r\n\t\tlet valueList = [this.state.weight, \r\n\t\t\t\t\t\tthis.state.height, \r\n\t\t\t\t\t\tthis.state.name,\r\n\t\t\t\t\t\tthis.state.alias,\r\n\t\t\t\t\t\tthis.state.eyecolor,\r\n\t\t\t\t\t\tthis.state.haircolor,\r\n\t\t\t\t\t\tthis.state.workplace]\r\n\r\n\t\tlabelList.map((item, index) => (\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t{valueList[index]}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t))\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t\t<Container fluid className=\"cardContainer mt-3 mb-3\">\r\n\t\t\t\t\t<Card className=\"bg-dark text-white\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<Card.Title>\r\n\t\t\t\t\t\t\t\t{this.state.name}\r\n\t\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={this.state.image} className=\"cardImage\" />\r\n\t\t\t\t\t\t\t{this.props.showInfo ?\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tthis.sortStats().map((stat) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Stat statName={stat[0]} statValue={stat[1]}/>\r\n\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t\t\t<Accordion className=\"bg-dark text-white\">\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col className=\"d-flex justify-content-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Accordion.Toggle as={Button} eventKey=\"0\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tDetails\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col className=\"d-flex justify-content-end\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this.props.showCard(this.props.heroGrid)} variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tRemove\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Text>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.renderDetails()}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t\t\t</div>: \t\r\n\t\t\t\t\t\t\t\t<Row className=\"mt-2\">\r\n\t\t\t\t\t\t\t\t\t<Col className=\"d-flex justify-content-end\">\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => this.props.showCard(this.props.heroGrid)} variant=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\t\tAdd to team\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {Stat, Hero, HeroTeam};","import React, { Component} from 'react';\r\n\r\nimport './SearchHero.css';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport {Hero} from './Hero';\r\nimport axios from 'axios';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nclass SearchHero extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\theroName: \"\",\r\n\t\t\theroList: []\r\n\t\t}\r\n\t\tthis.updateFlag = true\r\n\t}\r\n\tprocessList = (jsonList) => {\r\n\t\tlet listResult =  [];\r\n\t\tif(listResult !== undefined){\r\n\t\t\tlistResult = jsonList.map((heroItem)=>{\r\n\t\t\t\treturn heroItem.id\r\n\t\t\t})\t\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\theroList: listResult\r\n\t\t});\r\n\t}\r\n\thandleCallback = (statsData, operation) => {\r\n\t\tstatsData = statsData.map((item) => {\r\n\t\t\titem = item.replace(/\\s[a-z]+|,/gi, \"\");\r\n\t\t\tif (item===\"null\"){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t});\r\n\t\t// if(operation){\r\n\t\t// \tthis.statsData = this.statsData.map((item, index) => {\r\n\t\t// \t\treturn Number(item) + Number(statsData[index]);\r\n\t\t// \t});\r\n\t\t// }else{\r\n\t\t// \tthis.statsData = this.statsData.map((item, index) => {\r\n\t\t// \t\treturn Number(item) - Number(statsData[index]);\r\n\t\t// \t});\r\n\t\t// }\r\n\t}\r\n\thandleShowFlag = (heroNumber) => {\r\n\t\t// let stateName = \"show\" + heroNumber\r\n\t\t// this.setState({\r\n\t\t// \t[stateName]: !this.state[stateName]\r\n\t\t// })\r\n\t}\r\n\r\n\tcomponentDidMount(props, state){\r\n\t\tconsole.log(\"SearchHero did Mount\")\r\n\t}\r\n\tcomponentDidUpdate = () => {\r\n\t\tconsole.log(\"SearchHero Updated\")\r\n\t}\r\n\tshouldComponentUpdate() {\r\n\t\tif (this.updateFlag){\r\n\t\t\treturn true\r\n\t\t}else{\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Container className=\"SearchContainer\">\r\n\t\t\t\t<Formik\r\n\t\t\t\t\tinitialValues={{ name: \"\"}}\r\n\t\t\t\t\tvalidationSchema={LoginSchema}\r\n\t\t\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\t\t\tconst timeOut = setTimeout(() => {\r\n\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\tclearTimeout(timeOut);\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t\taxios.get(\"https://superheroapi.com/api.php/10226669230223430/search/\" + values.name)\r\n\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\tthis.processList(response.data.results)\r\n\t\t\t\t\t\t}).catch(error => console.log(error));\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{({touched, errors, isSubmitting, handleChange}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<Row className=\"mb-2\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"name\">Add a hero to your Super Team!</label>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row className=\"justify-content-end\">\r\n\t\t\t\t\t\t\t<Col xs={9} md={10} lg={11} className=\"form-group\">\r\n\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter a hero's name\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tclassName={`form-control ${touched.name && errors.name ? \"is-invalid\" : \"\"}`}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tcomponent=\"Row\"\r\n\t\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"invalid-feedback fs-6\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={3} md={2} lg={1} className=\"align-items-top\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary btn-block \"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{isSubmitting ? \"Loading...\" : \"Search\"}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\t\t\t\t<Row xs={1} md={3} lg={4} className=\"SearchResultGrid\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.heroList.map((id) => {\r\n\t\t\t\t\t\t\t\treturn ( \t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Hero heroId={id} heroGrid = \"GoodHero1\" showInfo= {false}\r\n\t\t\t\t\t\t\t\t\t\tshowCard ={this.handleShowFlag} parentCallback = {this.handleCallback} />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nconst LoginSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.min(3, \"Search must be 3 characters at minimum\")\r\n\t\t.required(\"Hero's name is required\"),\r\n});\r\n\r\n\r\nexport {SearchHero};","import React, { Component} from 'react';\n\nimport './App.css';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {Hero, HeroTeam} from './Hero';\nimport {SearchHero} from './SearchHero';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tconsole.log(\"App created\")\n\t\tsuper(props);\n\t\tthis.state ={\n\t\t\tgoodHero1: String(Math.floor(Math.random() * 731) + 1),\n\t\t\tgoodHero2: String(Math.floor(Math.random() * 731) + 1),\n\t\t\tgoodHero3: String(Math.floor(Math.random() * 731) + 1),\n\t\t\tevilHero1: String(Math.floor(Math.random() * 731) + 1),\n\t\t\tevilHero2: String(Math.floor(Math.random() * 731) + 1),\n\t\t\tevilHero3: String(Math.floor(Math.random() * 731) + 1),\n\t\t\tshowGoodHero1: true,\n\t\t\tshowGoodHero2: true,\n\t\t\tshowGoodHero3: true,\n\t\t\tshowEvilHero1: true,\n\t\t\tshowEvilHero2: true,\n\t\t\tshowEvilHero3: true,\n\t\t\tstatsData: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t\t\theroName: \"\"\n\t\t}\n\t\tthis.statsData = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n\t\tthis.updateFlag = true\n\t\tthis.heroName = \"\"\n\t}\n\n\thandleCallback = (statsData, operation) => {\n\t\tstatsData = statsData.map((item) => {\n\t\t\titem = item.replace(/\\s[a-z]+|,/gi, \"\");\n\t\t\tif (item===\"null\"){\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t\tif(operation){\n\t\t\tthis.statsData = this.statsData.map((item, index) => {\n\t\t\t\treturn Number(item) + Number(statsData[index]);\n\t\t\t});\n\t\t}else{\n\t\t\tthis.statsData = this.statsData.map((item, index) => {\n\t\t\t\treturn Number(item) - Number(statsData[index]);\n\t\t\t});\n\t\t}\n\t}\n\thandleShowFlag = (heroNumber) => {\n\t\tlet stateName = \"show\" + heroNumber\n\t\tthis.setState({\n\t\t\t[stateName]: !this.state[stateName]\n\t\t})\n\t\t// if(this.statsData[8] === 6){\n\t\t// \tthis.setState({\n\t\t// \t\tstatsData: this.statsData\n\t\t// \t})\n\t\t// }\n\t}\n\t\n\tcomponentDidMount(props, state){\n\t\tconsole.log(\"App did Mount\")\n\t}\n\tcomponentDidUpdate = () => {\n\t\tthis.statsData = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n\t\tconsole.log(\"App Updated\")\n\t}\n\tshouldComponentUpdate() {\n\t\tif (this.updateFlag){\n\t\t\treturn true\n\t\t}else{\n\t\t\treturn false\n\t\t}\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<Container fluid className=\"MainContainer\">\n\t\t\t\t<Container className=\"NavContainer\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\tSuper Team Builder!\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<Container className=\"FormContainer\">\n\t\t\t\t\t{/* <Form>\n\t\t\t\t\t\t<Row xs={1} md={2} lg={2}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"formEmail\">\n\t\t\t\t\t\t\t\t\t<Form.Label>\n\t\t\t\t\t\t\t\t\t\tEmail Adress\n\t\t\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" placeholder=\"Example@email.com\" />\n\t\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\n\t\t\t\t\t\t\t\t\t\tYour information is protected!\n\t\t\t\t\t\t\t\t\t</Form.Text>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"formPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label>\n\t\t\t\t\t\t\t\t\t\tPassword\n\t\t\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" />\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row xs=\"auto\" md=\"auto\" lg=\"auto\" className=\"d-flex justify-content-end\">\n\t\t\t\t\t\t\t<Button variant=\"secondary\">\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Form> */}\n\t\t\t\t</Container>\n\t\t\t\t<Container className=\"TeamContainer\">\n\t\t\t\t\t<Row xs={1} className=\"TeamInfo\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{/* statsData is updated after the hero cards are rendered.\n\t\t\t\t\t\t\tI need to render HeroTeam last.  */}\n\t\t\t\t\t\t\t{this.statsData[8] === 6 ? \t\t//Display info if team complete\n\t\t\t\t\t\t\t\t<HeroTeam statList={this.statsData}/>\n\t\t\t\t\t\t\t\t: \"Team incomplete\"}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row xs={1} md={2} lg={3} className=\"TeamGrid\">\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.state.showGoodHero1 ? \n\t\t\t\t\t\t\t\t<Hero \n\t\t\t\t\t\t\t\theroId={this.state.goodHero1} \n\t\t\t\t\t\t\t\theroGrid = \"GoodHero1\" \n\t\t\t\t\t\t\t\tshowInfo= {true}\n\t\t\t\t\t\t\t\tshowCard ={this.handleShowFlag} \n\t\t\t\t\t\t\t\tparentCallback = {this.handleCallback} />\n\t\t\t\t\t\t\t: <h1>Hidden</h1>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.state.showGoodHero2 ? \n\t\t\t\t\t\t\t\t<Hero heroId={this.state.goodHero2} \n\t\t\t\t\t\t\t\theroGrid = \"GoodHero2\" \n\t\t\t\t\t\t\t\tshowInfo= {true}\n\t\t\t\t\t\t\t\tshowCard ={this.handleShowFlag} \n\t\t\t\t\t\t\t\tparentCallback = {this.handleCallback} />\n\t\t\t\t\t\t\t: <h1>Hidden</h1>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.state.showGoodHero3 ? \n\t\t\t\t\t\t\t\t<Hero heroId={this.state.goodHero3} \n\t\t\t\t\t\t\t\theroGrid = \"GoodHero3\" \n\t\t\t\t\t\t\t\tshowInfo= {true}\n\t\t\t\t\t\t\t\tshowCard ={this.handleShowFlag} \n\t\t\t\t\t\t\t\tparentCallback = {this.handleCallback} />\n\t\t\t\t\t\t\t: <h1>Hidden</h1>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.state.showEvilHero1 ? \n\t\t\t\t\t\t\t\t<Hero heroId={this.state.evilHero1} \n\t\t\t\t\t\t\t\theroGrid = \"EvilHero1\" \n\t\t\t\t\t\t\t\tshowInfo= {true}\n\t\t\t\t\t\t\t\tshowCard ={this.handleShowFlag} \n\t\t\t\t\t\t\t\tparentCallback = {this.handleCallback} />\n\t\t\t\t\t\t\t: <h1>Hidden</h1>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.state.showEvilHero2 ? \n\t\t\t\t\t\t\t\t<Hero heroId={this.state.evilHero2} \n\t\t\t\t\t\t\t\theroGrid = \"EvilHero2\" \n\t\t\t\t\t\t\t\tshowInfo= {true}\n\t\t\t\t\t\t\t\tshowCard ={this.handleShowFlag} \n\t\t\t\t\t\t\t\tparentCallback = {this.handleCallback} />\n\t\t\t\t\t\t\t: <h1>Hidden</h1>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{this.state.showEvilHero3 ? \n\t\t\t\t\t\t\t\t<Hero heroId={this.state.evilHero3} \n\t\t\t\t\t\t\t\theroGrid = \"EvilHero3\" \n\t\t\t\t\t\t\t\tshowInfo= {true}\n\t\t\t\t\t\t\t\tshowCard ={this.handleShowFlag} \n\t\t\t\t\t\t\t\tparentCallback = {this.handleCallback} />\n\t\t\t\t\t\t\t: <h1>Hidden</h1>}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t\t<SearchHero />\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}